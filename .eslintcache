[{"C:\\Users\\ethan\\WebstormProjects\\movie_search\\src\\index.tsx":"1","C:\\Users\\ethan\\WebstormProjects\\movie_search\\src\\reportWebVitals.ts":"2","C:\\Users\\ethan\\WebstormProjects\\movie_search\\src\\App.tsx":"3","C:\\Users\\ethan\\WebstormProjects\\movie_search\\src\\MovieRow.tsx":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":425,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":3503,"mtime":1607911001948,"results":"8","hashOfConfig":"6"},{"size":1391,"mtime":1607911285364,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1yy1bbs",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\ethan\\WebstormProjects\\movie_search\\src\\index.tsx",[],["20","21"],"C:\\Users\\ethan\\WebstormProjects\\movie_search\\src\\reportWebVitals.ts",[],"C:\\Users\\ethan\\WebstormProjects\\movie_search\\src\\App.tsx",["22"],"import React, {useEffect, useState} from 'react';\nimport './App.css';\nimport MovieRow from \"./MovieRow\";\nimport $ from 'jquery'\nimport 'rsuite/dist/styles/rsuite-default.css';\n\n\n\nfunction App() {\n\n    const [searchResult, setSearchResult] = useState('')\n    const [movie, setMovie] = useState([] as any);\n\n    useEffect(() => {\n\n        preformSearch(searchResult);\n\n\n    }, [searchResult]);\n\n    function preformSearch(searchTerm: string) {\n        const urlString = 'https://api.themoviedb.org/3/search/movie?api_key=9b04c092ecca0cf3dbaa217c607ae4b4&query=' + searchTerm;\n        $.ajax({\n            url: urlString,\n            success: (searchResult) => {\n                const results = searchResult.results;\n\n                const movieRows: ((prevState: never[]) => never[]) | JSX.Element[] = []\n\n                results.forEach((movie: any) => {\n                    movie.poster_src = 'https://image.tmdb.org/t/p/w600_and_h900_bestv2' + movie.backdrop_path\n                    if(movie.backdrop_path === null){\n                        movie.poster_src =  'https://php7.joblo.com/assets/images/movie-database/placeholder.jpg'\n                    }\n                    const movieRow = <MovieRow\n                        id={movie.id}\n                        title={movie.original_title}\n                        img={movie.poster_src}\n                        description={movie.overview}\n                        vote={movie.vote_average}/>\n                    movieRows.push(movieRow);\n                })\n                setMovie(movieRows)\n            },\n            error: (xhr, status, err) => {\n                console.error('Failed to fetch data, setting default image: ', err);\n                movie.poster_src = 'https://php7.joblo.com/assets/images/movie-database/placeholder.jpg';\n            }\n        })\n    }\n\n\n    return (\n        <div className=\"App\">\n            <table className='titleBar'>\n                <tbody>\n                <tr>\n                    <td>\n                        <img src={'https://www.themoviedb.org/assets/2/v4/logos/v2/blue_short-8e7b30f73a4020692ccca9c88bafe5dcb6f8a62a4c6bc55cd9ba82bb2cd95f6c.svg'} alt={'app icon'} width={130}/>\n                    </td>\n                    <td width='8'/>\n                    <td>\n                        <h1>MovieDB Search</h1>\n                    </td>\n                </tr>\n                </tbody>\n            </table>\n\n            <div className=\"container\">\n                <form autoComplete=\"off\">\n                    <div className=\"finder\">\n                        <div className=\"finder__outer\">\n                            <div className=\"finder__inner\">\n                                <input className=\"finder__input\" type=\"text\"\n                                       style={{\n                                           fontSize: 24,\n                                           display: 'block',\n                                           paddingTop: 8,\n                                           paddingBottom: 8,\n                                           paddingLeft: 16,\n                                           width: '100%',\n                                       }} placeholder={'Enter search term'}\n                                       onChange={e => setSearchResult(e.target.value)}/>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </div>\n\n\n                {movie}\n        </div>\n    );\n\n}\nexport default App;\n","C:\\Users\\ethan\\WebstormProjects\\movie_search\\src\\MovieRow.tsx",[],{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":19,"column":8,"nodeType":"29","endLine":19,"endColumn":22,"suggestions":"30"},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'preformSearch'. Either include it or remove the dependency array.","ArrayExpression",["33"],"no-global-assign","no-unsafe-negation",{"desc":"34","fix":"35"},"Update the dependencies array to be: [preformSearch, searchResult]",{"range":"36","text":"37"},[375,389],"[preformSearch, searchResult]"]